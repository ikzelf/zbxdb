# vim: syntax=sql
[auto_discovery_60]
minutes: 60
db.lld: SELECT SCHEMA_NAME as "{#PDB}" FROM INFORMATION_SCHEMA.SCHEMATA

parm.lld: SELECT concat(@@datadir, ':', @@port) as "{#INST_NAME}", variable_name "{#PARAMETER}"
          FROM performance_schema.global_variables
          WHERE variable_value REGEXP '^[0-9]+$'

inst.lld: select concat(@@datadir, ':', @@port) as "{#INST_NAME}"

p_ts.lld: select db.schema_name "{#PDB}", '' as "{#TS_NAME}"
          from information_schema.schemata db
          union all
          select '' "{#PDB}", tablespace_name as "{#TS_NAME}"
          from information_schema.tablespaces

service.lld: SELECT d.schema_name "{#PDB}", '' "{#INST_NAME}", '' "{#SERVICE_NAME}"
             FROM information_schema.schemata d

[checks_01m]
minutes: 1
inst.uptime: select concat('inst[', concat(@@datadir, ':', @@port), ',uptime]'), variable_value
             from performance_schema.global_status
             where variable_name = 'Uptime'
db.openmode: select concat('db[', schema_name, ',openstatus]'),
            case when variable_value = 'OFF' then 3
            else 2
            end
            from performance_schema.global_variables,
            information_schema.schemata
            where variable_name = 'read_only'

scn: select   'db[current_scn]', cast(json_extract(local, '$.binary_log_position') + (left(right(json_extract(local, '$.binary_log_file'), 7), 6) << 32) as unsigned) as loc
           from performance_schema.log_status
     union all
     select 'db[delta_scn]', cast(json_extract(local,'$.binary_log_position') + (left(right(json_extract(local,'$.binary_log_file'),7),6)<<32) as unsigned) as loc
           from performance_schema.log_status

[checks_05m]
minutes: 5
parm.val: select concat('parm[',@@datadir,':',@@port,',',variable_name,',',
          case when variable_name in ('delayed_queue_size','host_cache_size','innodb_change_buffer_max_size',
          'innodb_ft_min_token_size','innodb_ft_max_token_size','innodb_purge_batch_size',
          'profiling_history_size','thread_cache_size') then 'value'
          when variable_name like 'performance_schema_%' then 'value'
          when variable_name like '%_size' then 'size'
          when variable_name in ('max_length_for_sort_data','max_sort_length','net_buffer_length',
          'regexp_stack_limit') then 'size'
          else 'value'
          end ,']') kkey,
          variable_value
          from performance_schema.global_variables
          where variable_value regexp '^[0-9]+$'

service.cnt: SELECT concat('service[',db,',,,sess]'), count(*)
        FROM information_schema.processlist
        where not db is null
        GROUP BY db

[checks_60m]
minutes: 60
p_ts: SELECT concat('p_ts[',table_schema,',,filesize]'),
            sum( data_length + index_length + data_free)
            FROM information_schema.TABLES
            GROUP BY table_schema
            union all
            SELECT concat('p_ts[',table_schema,',,usedbytes]'),
            sum( data_length + index_length)
            FROM information_schema.TABLES
            GROUP BY table_schema
[checks_720m]
minutes: 720
version: select concat('inst[',@@datadir,':',@@port,',version]'), version()
